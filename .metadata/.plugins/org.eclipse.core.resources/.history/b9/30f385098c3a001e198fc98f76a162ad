/**
 * Using Mysql 
 */


package com.krvinay.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.krvinay.entity.MovieEntity;
import com.krvinay.serviceimpl.MovieServiceImpl;

import lombok.AllArgsConstructor;

@RestController
@RequestMapping("/movie")
@AllArgsConstructor
public class MovieController {
	
	//used constructor injection rather than setter injection
	MovieServiceImpl movieService;
	
	//localhost:8080/movie/add
	@PostMapping("/add")
	public ResponseEntity<MovieEntity> add(@RequestBody MovieEntity movieEntity) {		
		
		/*String sampleRequest= 
				"{\r\n"
				+ "    \"name\": \"RRR\",\r\n"
				+ "    \"description\": \"xyz\",\r\n"
				+ "    \"artist\": \"vinay\",\r\n"
				+ "    \"email\": \"krvinay68@gmail.com\"\r\n"
				+ "}";*/
		
		MovieEntity movie = movieService.add(movieEntity);
		return new ResponseEntity<MovieEntity>(movie,HttpStatus.CREATED);		
	}
	
	//localhost:8080/movie/getall
	@GetMapping("/getall")
	public ResponseEntity<List<MovieEntity>> getAll() {	
	
		List<MovieEntity> movie = movieService.gets();
		return new ResponseEntity<List<MovieEntity>>(movie,HttpStatus.OK);		
	}
	
	//localhost:8080/movie/get/1
	@GetMapping("/get/{id}")
	public ResponseEntity<MovieEntity> getById(@PathVariable Long id) {			
		MovieEntity movie = movieService.get(id);
		return new ResponseEntity<MovieEntity>(movie,HttpStatus.OK);		
	}
	
	//localhost:8080/movie/update/1
	@PutMapping("/update/{id}")
	public ResponseEntity<MovieEntity> updateById(@PathVariable Long id,@RequestBody MovieEntity movieEntity) {			
		
		/*String sampleRequest="{\r\n"
				+ "    \"name\": \"Gadar1\",\r\n"
				+ "    \"description\": \"gadar1\",\r\n"
				+ "    \"artist\": \"sunny deol\",\r\n"
				+ "    \"email\": \"krvinay@gmail.com\"\r\n"
				+ "}";*/
		
		movieEntity.setId(id);
		MovieEntity movie = movieService.update(movieEntity);
		return new ResponseEntity<MovieEntity>(movie,HttpStatus.OK);		
	}
	
	//localhost:8080/movie/delete/1
	@DeleteMapping("/delete/{id}")
	public ResponseEntity<String> DeleteById(@PathVariable Long id) {								
		movieService.delete(id);
		return new ResponseEntity<String>("Data deleted", HttpStatus.OK);				
	}
	//localhost:8080/movie/patch
	@PatchMapping("/patch")
	public ResponseEntity<String> deleteTable() {
		return null;								
						
	}
}
